import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as i,o as r}from"./app-CFwVIVLe.js";const a={};function s(p,t){return r(),o("div",null,t[0]||(t[0]=[i(`<h1 id="hexo-with-travis-ci" tabindex="-1"><a class="header-anchor" href="#hexo-with-travis-ci"><span>HEXO with Travis CI</span></a></h1><p>将 Hexo 部署到 GitHub Pages</p><p>在本教程中，我们将会使用 Travis CI 将 Hexo 博客部署到 GitHub Pages 上。Travis CI 对于开源 repository 是免费的，但是这意味着你的站点文件将会是公开的。如果你希望你的站点文件不被公开，请直接前往本文 [私有 Repository](#私有 Repository) 部分。</p><pre><code>新建一个 repository。如果你希望你的站点能通过 &lt;你的 GitHub 用户名&gt;.github.io 域名访问，你的 repository 应该直接命名为 &lt;你的 GitHub 用户名&gt;.github.io。
将你的 Hexo 站点文件夹推送到 repository 中。默认情况下不应该 public 目录将不会被推送到 repository 中，你应该检查 .gitignore 文件中是否包含 public 一行，如果没有请加上。
将 Travis CI 添加到你的 GitHub 账户中。
前往 GitHub 的 Applications settings，配置 Travis CI 权限，使其能够访问你的 repository。
你应该会被重定向到 Travis CI 的页面。如果没有，请 手动前往。
在浏览器新建一个标签页，前往 GitHub 新建 Personal Access Token，只勾选 repo 的权限并生成一个新的 Token。Token 生成后请复制并保存好。
回到 Travis CI，前往你的 repository 的设置页面，在 Environment Variables 下新建一个环境变量，Name 为 GH_TOKEN，Value 为刚才你在 GitHub 生成的 Token。确保 DISPLAY VALUE IN BUILD LOG 保持 不被勾选 避免你的 Token 泄漏。点击 Add 保存。
在你的 Hexo 站点文件夹中新建一个 .travis.yml 文件：
</code></pre><p>sudo: false<br> language: node_js<br> node_js:</p><ul><li><p>10 # use nodejs v10 LTS<br> cache: npm<br> branches:<br> only:</p><ul><li>master # build master branch only<br> script:</li></ul></li><li><p>hexo generate # generate static files<br> deploy:<br> provider: pages<br> skip-cleanup: true<br> github-token: $GH_TOKEN<br> keep-history: true<br> on:<br> branch: master<br> local-dir: public</p><p>将 .travis.yml 推送到 repository 中。Travis CI 应该会自动开始运行，并将生成的文件推送到同一 repository 下的 gh-pages 分支下<br> 在 GitHub 中前往你的 repository 的设置页面，修改 GitHub Pages 的部署分支为 gh-pages。<br> 前往 https://&lt;你的 GitHub 用户名&gt;.github.io 查看你的站点是否可以访问。这可能需要一些时间。</p></li></ul><p>Project page</p><p>如果你更希望你的站点部署在 &lt;你的 GitHub 用户名&gt;.github.io 的子目录中，你的 repository 需要直接命名为子目录的名字，这样你的站点可以通过 https://&lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt; 访问。你需要检查你的 Hexo 配置文件，将 url 修改为 https://&lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;、将 root 的值修改为 /&lt;repository 的名字&gt;/<br> 私有 Repository</p><p>下面的指示基于 一键部署 编写。</p><pre><code>安装 hexo-deployer-git.

在 _config.yml（如果有已存在的请删除）添加如下配置：

deploy:
  type: git
  repo: https://github.com/&lt;username&gt;/&lt;project&gt;
  # example, https://github.com/hexojs/hexojs.github.io
  branch: gh-pages

运行 hexo clean &amp;&amp; hexo deploy 。

查看 username.github.io 上的网页是否部署成功。
</code></pre>`,10)]))}const g=e(a,[["render",s]]),c=JSON.parse('{"path":"/sigma/HEXO_travis%20CI.html","title":"HEXO with Travis CI","lang":"en-US","frontmatter":{"description":"HEXO with Travis CI 将 Hexo 部署到 GitHub Pages 在本教程中，我们将会使用 Travis CI 将 Hexo 博客部署到 GitHub Pages 上。Travis CI 对于开源 repository 是免费的，但是这意味着你的站点文件将会是公开的。如果你希望你的站点文件不被公开，请直接前往本文 [私有 Repo...","head":[["meta",{"property":"og:url","content":"http://xinxi.jokerpy.top/sigma/HEXO_travis%20CI.html"}],["meta",{"property":"og:site_name","content":"HoneyPot"}],["meta",{"property":"og:title","content":"HEXO with Travis CI"}],["meta",{"property":"og:description","content":"HEXO with Travis CI 将 Hexo 部署到 GitHub Pages 在本教程中，我们将会使用 Travis CI 将 Hexo 博客部署到 GitHub Pages 上。Travis CI 对于开源 repository 是免费的，但是这意味着你的站点文件将会是公开的。如果你希望你的站点文件不被公开，请直接前往本文 [私有 Repo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-07-03T08:57:56.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-03T08:57:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HEXO with Travis CI\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-07-03T08:57:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gaoming714\\",\\"url\\":\\"https://github.com/gaoming714\\"}]}"]]},"headers":[],"git":{"createdTime":1609557709000,"updatedTime":1719997076000,"contributors":[{"name":"gaoming714","email":"gaoming714@outlook.com","commits":1}]},"readingTime":{"minutes":2.33,"words":700},"filePathRelative":"sigma/HEXO_travis CI.md","localizedDate":"January 2, 2021","autoDesc":true,"excerpt":"\\n<p>将 Hexo 部署到 GitHub Pages</p>\\n<p>在本教程中，我们将会使用 Travis CI 将 Hexo 博客部署到 GitHub Pages 上。Travis CI 对于开源 repository 是免费的，但是这意味着你的站点文件将会是公开的。如果你希望你的站点文件不被公开，请直接前往本文 [私有 Repository](#私有 Repository) 部分。</p>\\n<pre><code>新建一个 repository。如果你希望你的站点能通过 &lt;你的 GitHub 用户名&gt;.github.io 域名访问，你的 repository 应该直接命名为 &lt;你的 GitHub 用户名&gt;.github.io。\\n将你的 Hexo 站点文件夹推送到 repository 中。默认情况下不应该 public 目录将不会被推送到 repository 中，你应该检查 .gitignore 文件中是否包含 public 一行，如果没有请加上。\\n将 Travis CI 添加到你的 GitHub 账户中。\\n前往 GitHub 的 Applications settings，配置 Travis CI 权限，使其能够访问你的 repository。\\n你应该会被重定向到 Travis CI 的页面。如果没有，请 手动前往。\\n在浏览器新建一个标签页，前往 GitHub 新建 Personal Access Token，只勾选 repo 的权限并生成一个新的 Token。Token 生成后请复制并保存好。\\n回到 Travis CI，前往你的 repository 的设置页面，在 Environment Variables 下新建一个环境变量，Name 为 GH_TOKEN，Value 为刚才你在 GitHub 生成的 Token。确保 DISPLAY VALUE IN BUILD LOG 保持 不被勾选 避免你的 Token 泄漏。点击 Add 保存。\\n在你的 Hexo 站点文件夹中新建一个 .travis.yml 文件：\\n</code></pre>"}');export{g as comp,c as data};
